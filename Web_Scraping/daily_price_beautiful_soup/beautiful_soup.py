# 뷰티풀 수프(Beautiful Soup) : HTML, XML 페이지로부터 데이터를 추출하는 파이썬 라이브러리
# 웹 크롤(Web Crawl) : 웹에 링크된 페이지들을 따라 돌아다니며 웹 사이트의 데이터들을 읽어오는 것
# 웹 스크레이프(Web Scrape) : 크롤링해서 모은 데이터에서 원하는 정보를 추출한다는 의미
# 뷰티풀 수프는 내부적으로 HTML을 XML 형태의 파이썬 객체로 변환해서 처리하기 때문에 구조적으로 잘못된 HTML도 문제 없이 분석 가능

# 접근 권한이 있는 저작권 자료를 스크레이핑해서 분석 목적으로 사용하는 것은 괜찮음
# 그러나 원저작자의 허가를 받지 않고 자신의 웹에 게시하거나 다른 사람이 다운로드하도록 공유하면 안 됨
# 잦은 웹 스크레이핑으로 상대방 시스템 성능에 지장을 주는 경우도 문제가 될 수 있음
# 합법적으로 허용되는 범위가 어디까지인지 반드시 확인한 후 웹 스크레이핑을 수행

# 파서별 장단점

# 퓨티풀 수프는 HTML 페이지를 분석할 때 네 가지 인기 파서 라이브러리를 골라서 사용 가능
# 파서별로 장단점이 있으므로 파싱하려는 페이지 특성을 고려하여 지정

# 파서 : Python's html.parser
# 문자열 : 'html.parser'
# 장점 : 기본 옵션으로 설치되어 있음, 속도가 적절하고 유연한 파싱 가능
# 단점 : lxml 파서보다 느리고, html5lib 파서만큼 유연하지 못함

# 파서 : lxml's HTML parser
# 문자열 : 'lxml'
# 장점 : 속도가 매우 빠르고, 유연한 파싱 가능

# 파서 : lxml's HTML parser
# 문자열 : 'lxml-xml', 'xml'
# 장점 : 속도가 매우 빠르고, 유연한 파싱이 가능
# 단점 : xml 파일에만 사용 가능

# 파서 : html5lib
# 문자열 : 'html5lib'
# 장점 : 웹 브라우저와 동일한 방식으로 파싱, 극도로 유연하여 복잡한 구조의 HTML 문서를 파싱하는 데 사용
# 단점 : 매우 느림

print()

# find_all()함수와 find() 함수 비교

# 뷰티풀 수프에서 가장 중요한 함수는 원하는 태그를 찾아주는 find_all() 함수와 find() 함수
# find_all() 함수 : 문서 전체를 대상으로 조건에 맞는 태그를 검색
# find() 함수 : 문서 내에서 하나뿐인 태그를 검색
# 아무것도 못 찾으면 find_all() 함수는 빈 리스트를, find() 함수는 None 반환

print()